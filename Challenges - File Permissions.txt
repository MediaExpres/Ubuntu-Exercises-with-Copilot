NOTE: using Linux Mint System:
  Desktop: Cinnamon 6.0.4 Distro: Linux Mint 21.3 Virginia base: Ubuntu 22.04 jammy

Prerequisite:

Create a directory with a regular file in it. Work as a non-privileged user.
# mkdir linux
# echo "This is Ubuntu" > linux/ubuntu.txt
# tree linux/
linux/
|_____ubuntu.txt

0 directories, 1 file

Based on the above image answer the following questions:

Challenge #1

Display the permissions of ubuntu.txt
Remove all permissions of others.

Copilot:
ls -l linux/ubuntu.txt
-rw-rw-r-- 1 mihai mihai 15 Jan 21 11:08 linux/ubuntu.txt

The result:
mihai@mihai-Legion-Y540-17IRH:~$ stat linux/ubuntu.txt
  File: linux/ubuntu.txt
  Size: 15        	Blocks: 8          IO Block: 4096   regular file
Device: 805h/2053d	Inode: 6561922     Links: 1
Access: (0660/-rw-rw----)  Uid: ( 1000/   mihai)   Gid: ( 1000/   mihai)
Access: 2024-01-21 11:08:13.519208226 +0200
Modify: 2024-01-21 11:08:13.519208226 +0200
Change: 2024-01-21 11:13:40.777904387 +0200
 Birth: 2024-01-21 11:08:13.519208226 +0200

 Challenge #2

Remove the read permission of ubuntu.txt for the owner and check if the owner can read the file.

Copilot: 
# chmod u-r linux/ubuntu.txt
# ls -l linux/ubuntu.txt
--w-r----- 1 root root 15 Jan 21 11:05 linux/ubuntu.txt !!! small error in copilot answer in the --w-r-... instead of --w-rw... succesion:

mihai@mihai-Legion-Y540-17IRH:~$ ls -l linux/ubuntu.txt
--w-rw---- 1 mihai mihai 15 Jan 21 11:08 linux/ubuntu.txt

# cat linux/ubuntu.txt
cat: linux/ubuntu.txt: Permission denied

This goes well: 
mihai@mihai-Legion-Y540-17IRH:~$ cat linux/ubuntu.txt
cat: linux/ubuntu.txt: Permission denied

Challenge #3

Using the octal notation, set the permissions of the directory to rwxrwx--- and of the file to rw-r-----

Copilot solution:

# chmod 770 linux
# chmod 640 linux/ubuntu.txt
# ls -l linux
total 4
-rw-r----- 1 root root 15 Jan 21 11:05 ubuntu.txt
# ls -ld linux
drwxrwx--- 2 root root 4096 Jan 21 11:05 linux

Verification goes wooble but correct in the end:
mihai@mihai-Legion-Y540-17IRH:~$ chmod 770 linux
mihai@mihai-Legion-Y540-17IRH:~$ ls -l linux
total 4
--w-rw---- 1 mihai mihai 15 Jan 21 11:08 ubuntu.txt
mihai@mihai-Legion-Y540-17IRH:~$ cmod 640 linuc/ubuntu.txt
Command 'cmod' not found, did you mean:
  command 'kmod' from deb kmod (29-1ubuntu1)
  command 'mod' from deb monodoc-base (6.8.0.105+dfsg-3.2)
  command 'cmsd' from deb xrootd-server (5.4.1-1)
  command 'qmod' from deb gridengine-client (8.1.9+dfsg-10build1)
  command 'chmod' from deb coreutils (8.32-4.1ubuntu1)
  command 'jmod' from deb openjdk-11-jdk-headless (11.0.20.1+1-0ubuntu1~22.04)
  command 'jmod' from deb openjdk-17-jdk-headless (17.0.8.1+1~us1-0ubuntu1~22.04)
  command 'jmod' from deb openjdk-18-jdk-headless (18.0.2+9-2~22.04)
  command 'jmod' from deb openjdk-19-jdk-headless (19.0.2+7-0ubuntu3~22.04)
Try: sudo apt install <deb name>
mihai@mihai-Legion-Y540-17IRH:~$ chmod 640 linux/ubuntu.txt
mihai@mihai-Legion-Y540-17IRH:~$ ls -l linux
total 4
-rw-r----- 1 mihai mihai 15 Jan 21 11:08 ubuntu.txt
mihai@mihai-Legion-Y540-17IRH:~$ ls -ld linux
drwxrwx--- 2 mihai mihai 4096 Jan 21 11:08 linux

*** now I did changed the hostname from mihai-Legion-Y540-17IRH to mihai-Legion with the following Copilot succesfull instruction:
To change the machine name in Linux Mint, you need to edit two files: /etc/hostname and /etc/hosts. These files store the current name of your computer and the mapping between host names and IP addresses. You can use any text editor to modify these files, but you need root privileges to do so. Here are the steps to follow:
Open a terminal and run the command sudo xed /etc/hostname. This will open the file with the default text editor in Linux Mint Cinnamon. If you are using a different desktop environment, you may need to replace xed with another editor, such as nano or vi.
In the file, replace the current name mihai-Legion-Y540-17IRH with the new name mihai-Legion and save the file.
Next, run the command sudo xed /etc/hosts. This will open the file that contains the mapping between host names and IP addresses. You need to change the lines that refer to the old name mihai-Legion-Y540-17IRH to the new name mihai-Legion. For example, you may see something like this:
127.0.0.1 localhost
127.0.1.1 mihai-Legion-Y540-17IRH
Change the second line to:
127.0.1.1 mihai-Legion
Save the file and exit the editor.
Finally, you need to update the system with the new name. You can do this by running the command hostname mihai-Legion. This will set the current host name to mihai-Legion without rebooting. Alternatively, you can restart your computer to apply the changes.
***

Challenge #4

Set the permissions of the directory to 0667. Check if the user (owner) can list its contents, move to the directory and remove it.

Copilot solution:
# chmod 0667 linux
# ls -ld linux
drw-rw-rwx 2 root root 4096 Jan 21 11:05 linux

and to verify:
# ls linux
ls: cannot open directory 'linux': Permission denied
# cd linux
-bash: cd: linux: Permission denied
# rm -r linux
rm: cannot remove 'linux': Permission denied

mihai-Legion execution:
mihai@mihai-Legion:~$ chmod 0667 linux
mihai@mihai-Legion:~$ ls -ld linux
drw-rw-rwx 2 mihai mihai 4096 Jan 21 11:08 linux

and verify the verification:
ihai@mihai-Legion:~$ ls linux
ls: cannot access 'linux/ubuntu.txt': Permission denied
ubuntu.txt
mihai@mihai-Legion:~$ cd linux
bash: cd: linux: Permission denied
mihai@mihai-Legion:~$ rm -r linux
rm: cannot remove 'linux/ubuntu.txt': Permission denied
rm: cannot remove 'linux': Directory not empty



Challenge #5

Set the permissions of all the files in the user's home directory to 0640 and the permissions of all directories to 0750.

COPILOT solution:
Open a terminal and navigate to your home directory. You can do this by running the command cd ~.
To set the permissions of all the files to 0640, run the command find . -type f -exec chmod 0640 {} \;. 
This will find all the regular files (-type f) in the current directory and its subdirectories (.), and execute the chmod 0640 command 
on each file (-exec chmod 0640 {} \;). The 0640 expression means to grant read and write permissions (4 + 2) to the owner, read permission 
(4) to the group, and no permissions (0) to others.
To set the permissions of all the directories to 0750, run the command find . -type d -exec chmod 0750 {} \;. 
This will find all the directories (-type d) in the current directory and its subdirectories (.), and execute the chmod 0750 command on each 
directory (-exec chmod 0750 {} \;). The 0750 expression means to grant read, write, and execute permissions (4 + 2 + 1) to the owner, 
read and execute permissions (4 + 1) to the group, and no permissions (0) to others.
You can verify the changes by running the command ls -lR. This will list the files and directories in the current directory and its subdirectories 
recursively (-lR), along with their permissions, owner, group, size, date, and name.

mihai-Legion execution of COPILOT solution:
Tricky question because first one should run the 0750 command to directories else it won't work:
mihai@mihai-Legion:~$ cd ~
mihai@mihai-Legion:~$ find . -type f -exec chmod 0640 {} \;
chmod: cannot access './linux/ubuntu.txt': Permission denied
^C
mihai@mihai-Legion:~$ sudo find . -type f -exec chmod 0640 {} \;
[sudo] password for mihai:         
^C
mihai@mihai-Legion:~$ find . -type d -exec chmod 0775 {} \;
mihai@mihai-Legion:~$ find . -type f -exec chmod 0640 {} \;

# here it worked, while the difference between Copilot and Andrei course solution is: find . vs. find ~ addressed by Copilot going first in cd ~ . (The difference between find . and find ~ in Linux Mint is that find . will start the search in the current directory, while find ~ will start the search in the user’s home directory. The . symbol represents the current directory, and the ~ symbol represents the user’s home directory. For example, if you are in the /etc directory and run find . -name "hosts", it will look for files named “hosts” in the /etc directory and its subdirectories. But if you run find ~ -name "hosts", it will look for files named “hosts” in your home directory (such as /home/mihai) and its subdirectories.)



Challenge #6

As a non-privileged user list the contents of /root using the ls command. See what will happen.
As root set SUID to ls and list the contents of /root again as a non-privileged user.
Check the SUID permission set on ls
As root remove the SUID bit.

mihai-Legino verification of Copilot suggestions:

- As a non-privileged user list the contents of /root using the ls command. See what will happen.
mihai@mihai-Legion:~$ ls /root
ls: cannot open directory '/root': Permission denied

- As root set SUID to ls and list the contents of /root again as a non-privileged user.
mihai@mihai-Legion:~$ chmod u+s /bin/ls #COPILOT solution does not work, because i used it not using ROOT!!!!
chmod: changing permissions of '/bin/ls': Operation not permitted
mihai@mihai-Legion:~$ ls -l /bin/ls
-rwxr-xr-x 1 root root 138208 Feb  7  2022 /bin/ls

miha-Legion tweak to the Copilot solution:
mihai@mihai-Legion:~$ sudo chmod u+s /bin/ls # running aas privileged user works!!!
[sudo] password for mihai:         
mihai@mihai-Legion:~$ ls /root
mihai@mihai-Legion:~$ ls -l /bin/ls
-rwsr-xr-x 1 root root 138208 Feb  7  2022 /bin/ls

Andrei course solution is: # sudo chmod 4755 /usr/bin/ls 

- Check the SUID permission set on ls
mihai@mihai-Legion:~$ ls -l /bin/ls
-rwsr-xr-x 1 root root 138208 Feb  7  2022 /bin/ls

- As root remove the SUID bit.
mihai@mihai-Legion:~$ sudo chmod u-s /bin/ls
mihai@mihai-Legion:~$ ls -l /bin/ls
-rwxr-xr-x 1 root root 138208 Feb  7  2022 /bin/ls

Andrei course solution is: # sudo chmod 0755 /usr/bin/ls

Challenge #7

Set the directory permissions to 0777 and the file permissions to 0000. As another non-privileged user, try to remove the file.
Create a new file in the directory and set its permissions to 0644.
Set the Sticky Bit on the directory. 
As another non-privileged user, try to remove the file.


Challenge #8

Change the owner and the group owner of all files in the current user home directory to the current user and its primary group.
